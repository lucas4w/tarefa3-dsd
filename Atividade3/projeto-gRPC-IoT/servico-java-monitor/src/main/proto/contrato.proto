syntax = "proto3";

option java_package = "br.com.grpc.iot";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";

service MonitorService {

  rpc RegistrarUsuario(RegistrarUsuarioRequest) returns (RegistrarUsuarioResponse);

  rpc RegistrarSensor(RegistrarSensorRequest) returns (RegistrarSensorResponse);

  rpc EnviarDadosSensor(SensorData) returns (StatusResposta);

  rpc GetUser(UserData) returns (UserResponse);

  rpc ListarSensores(ListarSensoresRequest) returns (SensoresResponse);

  rpc GetDados(DadosRequest) returns (DadosResponse);
}

message DadosRequest{
  string sensor_id = 1; 
}

message DadosResponse {
  string mensagem = 1;    
  bool sucesso = 2;         
  string sensor_id_encontrado = 3; 
  float temperatura_encontrada = 4;
  float umidade_encontrada = 5;    
  google.protobuf.Timestamp timestamp_encontrado = 6; 
}

message ListarSensoresRequest {
  int64 usuario_id = 1;
}

message SensorInfo {
  string sensor_id = 1;
  string nome = 2;
  string descricao = 3;
}

message SensoresResponse {
  string mensagem = 1;             
  bool sucesso = 2;                
  repeated SensorInfo sensores = 3; // lista de objetos SensorInfo
}

message UserData {
  string email = 1;
}

message UserResponse {
  bool sucesso = 1;
  int64 usuario_id = 2;
}

// A mensagem para requisitar o registro de um usuário.
message RegistrarUsuarioRequest {
  string email = 1; // Email único do usuário
  string nome = 2;  // Nome do usuário
}

// A mensagem de resposta para o registro de um usuário.
message RegistrarUsuarioResponse {
  string mensagem = 1;       // Mensagem de status (sucesso/erro)
  int64 usuario_id = 2;      // ID do usuário registrado (0 se falha)
  bool sucesso = 3;          // Indica se a operação foi bem-sucedida
}

// A mensagem para requisitar o registro de um sensor.
message RegistrarSensorRequest {
  int64 usuario_id = 1;      // ID do usuário ao qual o sensor será associado
  string nome = 2;           // Nome amigável do sensor
  string descricao = 3;      // Descrição opcional do sensor
}

// A mensagem de resposta para o registro de um sensor.
message RegistrarSensorResponse {
  string mensagem = 1;       // Mensagem de status (sucesso/erro)
  string sensor_id = 2;      // ID único do sensor registrado (vazio se falha)
  bool sucesso = 3;          // Indica se a operação foi bem-sucedida
}

// A mensagem que representa uma única leitura do sensor.
message SensorData {
  string sensor_id = 1;            // Identificador único do sensor
  float temperatura = 2;           // Valor da temperatura em Celsius
  float umidade = 3;               // Percentual de umidade
  string mensagem = 4;      
  bool sucesso = 5;
  google.protobuf.Timestamp timestamp = 6; // Data e hora da leitura
}

// A mensagem de resposta que o servidor enviará após receber a requisição.
message StatusResposta {
  string mensagem = 1;
  int32 total_leituras_recebidas = 2;
  bool sucesso = 3; 
}
